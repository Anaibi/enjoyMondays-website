@mixin transition($args...) {
  -webkit-transition: $args;
  -ms-transition: $args;
  transition: $args;
}

@mixin transform($args...) {
  -webkit-transform: $args;
  -ms-transform: $args;
  transform: $args;
}


@mixin hide {
  visibility: hidden;
  opacity: 0;
  @include transition(visibility 0s linear 0.5s, opacity 0.2s linear);
}

@mixin show {
  visibility: visible;
  opacity: 1;
  @include transition(visibility 0s linear 0.5s, opacity 0.5s linear);
}


%clearfix {
 // For modern browsers
  &:before,
  &:after {
    content:"";
    display:table;
  }  
  &:after {
    clear:both;
  }  
  // For IE 6/7 (trigger hasLayout)
  & {
    zoom:1;
  }
}

@mixin vCentered($y:50%) {
  position: relative;
  top: $y;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}


$break-smallest: 350px !default;
$break-small: 480px !default;
$break-medium: 650px !default;
$break-large: 1350px !default;

@mixin respond-to($media, $val:max) {
  
  @if $media == smallest {
    @media screen and (#{$val}-width: $break-smallest) { @content; }
  }

  @if $media == small {
    @media screen and (#{$val}-width: $break-small) { @content; }
  }
    
  @else if $media == medium {
    @media screen and (#{$val}-width: $break-medium) { @content; }
  }

  @else if $media == large {
    @media screen and (#{$val}-width: $break-large) { @content; }
  }

  @else if $media == landscape {
    @media screen and (#{$val}-height: $break-medium) and (orientation: landscape) { @content; }
  }

  @else if $media == small-height {
    @media screen and (max-height: $break-medium) and (max-width: 700px) { @content; }
  }
}